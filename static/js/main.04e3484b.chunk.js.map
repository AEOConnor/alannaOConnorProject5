{"version":3,"sources":["Components/Form.js","Components/Header.js","Components/Representatives.js","Components/SavedReps.js","Components/Main.js","Components/Footer.js","Components/firebase.js","App.js","serviceWorker.js","index.js"],"names":["Form","react_default","a","createElement","action","onSubmit","this","props","handleSubmit","htmlFor","className","type","placeholder","onChange","handleChange","value","userPostalCode","required","pattern","onClick","handleClick","Component","Header","Components_Form","Representatives","name","office","riding","party","href","phone","aria-hidden","email","url","personalUrl","SavedReps","Main","_this","userReps","map","rep","key","Components_Representatives","saveButton","handleClickTop","savedReps","console","log","title","info","Components_SavedReps","removeButton","Footer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","scroll","scrollMore","duration","delay","smooth","scrollToTop","e","preventDefault","database","ref","push","state","forEach","item","remove","axios","method","concat","dataResponse","then","res","apiResult","data","representatives_centroid","dataArray","checkArray","finalArray","includes","repInfo","last_name","elected_office","district_name","party_name","offices","tel","personal_url","setState","show","target","toUpperCase","indexOf","replace","_this2","on","response","newState","val","Components_Header","Components_Main","id","Components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04e3484b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/Form.css';\n\nclass Form extends Component {\n  render(){\n    return (\n      <form action=\"submit\" onSubmit={this.props.handleSubmit} >\n        <fieldset>\n          <label htmlFor=\"postCode\">Enter a postal code to find local representatives:</label>\n          <input className=\"headerInput\" type=\"text\" placeholder=\"(i.e A1A1A1)\" onChange={this.props.handleChange} value={this.props.userPostalCode} required pattern=\"[A-Z][0-9][A-Z][0-9][A-Z][0-9]|[A-Z][0-9][A-Z] [0-9][A-Z][0-9]\"/>\n          <button className=\"formSubmit headerInput\" type=\"submit\" onClick={this.props.handleClick}>Show me!</button>\n        </fieldset>  \n      </form>\n    )\n  }\n}\nexport default Form;","import React, {Component} from 'react';\nimport '../styles/Header.css';\nimport Form from './Form.js';\n\nclass Header extends Component {\n\n  render() {\n    return(\n      <div className='Header'>\n        <header>\n          <div className=\"wrapper formHeader\">\n            <h1>Know Your government</h1>\n            <Form handleSubmit={this.props.handleSubmit} handleChange={this.props.handleChange} userPostalCode={this.props.userPostalCode} handleClick={this.props.handleClick} />\n          </div>\n          \n        </header>\n      </div>\n    )\n  }\n}\nexport default Header;","import React, {Component} from 'react';\nimport '../styles/Representatives.css';\n\nclass Representatives extends Component {\n  render(){\n    return(\n      <div className=\"Representatives\">\n        <div className=\"repCard\">\n          <h2>{this.props.name}</h2>\n          <p className=\"riding\">{this.props.office}</p>\n          <p>{this.props.riding}</p>\n          <p>{this.props.party}</p>\n          <div className=\"repContact clearfix\">\n            <a href={this.props.phone}><i className=\"fas fa-phone\" aria-hidden=\"true\"></i><span className=\"sr-only\">Call {this.props.name}</span>{this.props.phone}</a>\n            <a href={this.props.email}><i className=\"fas fa-envelope\" aria-hidden=\"true\"></i><span className=\"sr-only\">Email {this.props.name}</span>{this.props.email}</a>\n            {(this.props.url) ?\n              (<a href={this.props.url} className=\"url\">Visit {this.props.name}'s website</a>) ||\n              (<a href={this.props.personalUrl} className=\"url\">Visit {this.props.name}'s website</a>) : \n              null\n            }\n          </div>\n        </div>\n      </div>\n    )    \n  }\n}\nexport default Representatives;","import React, {Component} from 'react';\n\nclass SavedReps extends Component {\n  render(){\n    return(\n      <div className=\"Representatives savedRep\">\n        <div className=\"repCard\">\n          <h2>{this.props.name}</h2>\n          <p className=\"riding\">{this.props.office}</p>\n          <p>{this.props.riding}</p>\n          <p>{this.props.party}</p>\n          <div className=\"repContact clearfix\">\n            <a href={this.props.phone}><i className=\"fas fa-phone\" aria-hidden=\"true\"></i><span className=\"sr-only\">Call {this.props.name}</span>{this.props.phone}</a>\n            <a href={this.props.email}><i className=\"fas fa-envelope\" aria-hidden=\"true\"></i><span className=\"sr-only\">Email {this.props.name}</span>{this.props.email}</a>\n            {(this.props.url) ?\n              (<a href={this.props.url} className=\"url\">Visit {this.props.name}'s website</a>) ||\n              (<a href={this.props.personalUrl} className=\"url\">Visit {this.props.name}'s website</a>) :\n              null\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default SavedReps;","import React, {Component} from 'react';\nimport '../styles/Main.css';\nimport Representatives from './Representatives';\nimport SavedReps from './SavedReps.js';\n\nclass Main extends Component {\n  render(){\n    return(\n      <div className=\"Main\">\n        <main className=\"wrapper\">\n          <section>\n            <h2 className=\"titlePC\">Representatives for: {this.props.userPostalCode}</h2>\n          <ul className=\"repInfo\">\n            {this.props.userReps.map(rep => {\n              return (\n                <li key={rep.key}>\n                  <Representatives\n                    name={rep.name}\n                    office={rep.office}\n                    riding={rep.riding}\n                    party={rep.party}\n                    email={rep.email}\n                    phone={rep.phone}\n                    url={rep.url}\n                    personalUrl={rep.personalUrl}\n                  />\n                </li>\n              )\n            })}\n            <button className=\"button\" onClick={this.props.saveButton}>Save reps for {this.props.userPostalCode}</button>\n            <button className=\"button\" onClick={this.props.handleClick}>Show my saved reps</button>\n          </ul>\n          <button className=\"button\" onClick={this.props.handleClickTop}>Back to top</button>\n        </section>\n        <section>\n          <h2 className=\"titlePC\">My Saved Reps</h2>\n            <div>\n              <ul className=\"repInfo savedRep\">\n                {this.props.savedReps.map(rep => {\n                  console.log(rep.key)\n                  return rep.title.map(info => {\n                    return (\n                      <li key={info.key}>\n                        <SavedReps\n                          name={info.name}\n                          office={info.office}\n                          riding={info.riding}\n                          party={info.party}\n                          email={info.email}\n                          phone={info.phone}\n                          url={info.url}\n                          personalUrl={info.personalUrl}\n                        />\n                        <button className=\"button\" onClick={() => this.props.removeButton(info.key)}>Remove rep</button>\n                      </li>\n                    )\n                  });\n                })}\n              </ul>\n            </div>\n          <button className=\"button\" onClick={this.props.handleClickTop}>Back to top</button>\n        </section>\n        </main>        \n      </div>\n    )\n  }\n}\nexport default Main;","import React, {Component} from 'react';\nimport '../styles/Footer.css';\n\nclass Footer extends Component {\n  render(){\n    return(\n      <div className=\"Footer\">\n        <footer>Know Your Government | Data Provided by <a href=\"https://represent.opennorth.ca/\">Represent</a></footer>\n      </div>\n    )\n  }\n}\nexport default Footer;","import firebase from 'firebase';\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyB35apiwRzurbwgK47HavC3uT4YUlkAHsM\",\n  authDomain: \"know-your-government-35104.firebaseapp.com\",\n  databaseURL: \"https://know-your-government-35104.firebaseio.com\",\n  projectId: \"know-your-government-35104\",\n  storageBucket: \"know-your-government-35104.appspot.com\",\n  messagingSenderId: \"690763001616\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React, { Component } from 'react';\nimport './styles/App.css';\nimport Header from './Components/Header.js';\nimport Main from './Components/Main.js';\nimport Footer from './Components/Footer.js';\nimport {animateScroll as scroll } from \"react-scroll\";\nimport firebase from './Components/firebase.js';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      userReps: [],\n      savedReps: [],\n      userPostalCode: '',\n      show: false,\n    }\n  }\n\n  //function for smooth scroll to results\n  handleClick = () => {\n    scroll.scrollMore(700, {\n      duration: 2800,\n      delay: 200,\n      smooth: true\n    })\n  }\n\n  //function for smooth scroll to top of page\n  handleClickTop = () => {\n    scroll.scrollToTop({\n      duration: 2800,\n      delay: 200,\n      smooth: true\n    })\n  }\n\n  //firebase function to store saved results\n  componentDidMount(){\n    const dbref = firebase.database().ref();\n    dbref.on('value', response => {\n      const newState = [];\n      const data = response.val();\n      for (let key in data){\n        newState.push({\n        key: key,\n        title: data[key]\n        }) \n      }\n      this.setState({\n        savedReps: newState\n      })\n    })\n  }\n\n  //function to save user reps to firebase\n  saveButton = (e) => {\n    e.preventDefault();\n    const dbRef = firebase.database().ref();\n    dbRef.push(this.state.userReps);\n  }\n\n  // function to remove user reps from firebase\n  removeButton = (e) => {\n    this.state.savedReps.forEach(rep => {\n      if(rep.key){\n        rep.title.forEach(item => {\n        if (item.key === e){\n          const dbRef = firebase.database().ref(rep.key);\n          dbRef.remove();\n        }\n      })\n      }\n    })\n  }\n\n  //function for axios call \n  handleSubmit = (e) => {\n    e.preventDefault();\n    axios({\n      method: 'GET',\n      url: `https://represent.opennorth.ca/postcodes/${this.state.userPostalCode}`,\n      dataResponse: 'json',\n      }).then((res) => {\n          const apiResult = res.data.representatives_centroid;\n          const dataArray = [];\n          const checkArray = [];\n          const finalArray = [];\n             \n          apiResult.forEach(rep => {\n            if (checkArray.includes(rep.name) === false){\n              checkArray.push(rep.name);\n              dataArray.push(rep);\n            } \n          })\n\n          dataArray.forEach(rep => {\n            const key = rep.last_name;\n            const name = rep.name;\n            const office = rep.elected_office;\n            const riding = rep.district_name;\n            const party = rep.party_name;\n            const email = rep.email;\n            const phone = rep.offices[0].tel;\n            const url = rep.url;\n            const personalUrl= rep.personal_url;\n            const repInfo = {key, name, office, riding, party, email, phone, url, personalUrl};\n            finalArray.push(repInfo);\n          })\n\n          this.setState({\n            userReps: finalArray,\n            show: true\n          })\n      });\n  }\n\n //handle change converts the user's input from lower case to uppercase and removes any white spaces. \n  handleChange = (e) => {\n   e.target.value = e.target.value.toUpperCase();\n    if (e.target.value.indexOf(' ') >= 0) {\n      this.setState({\n        userPostalCode: e.target.value.replace(/\\s/g, '')\n      })\n    } else {\n        this.setState({\n        userPostalCode: e.target.value\n        })\n      }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header handleSubmit={this.handleSubmit} handleChange={this.handleChange} userPostalCode={this.state.userPostalCode} handleClick={this.handleClick}/>\n        {(this.state.show === true) ?\n          (<Main id=\"results\" handleClickTop={this.handleClickTop} userReps={this.state.userReps} savedReps={this.state.savedReps} handleClick={this.handleClick} userPostalCode={this.state.userPostalCode} saveButton={this.saveButton} removeButton={this.removeButton}/>) : (\n            null\n          )\n        }\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}